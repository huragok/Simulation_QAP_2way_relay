vecteur - vector
fichier - file
donnees - data
poubelle - trash bin
ligne - line
lire - read
tire_solution_aleatoire - draw_solution_random
recuit - annealing

a_la_ligne : read to the first delimiting character (\n)
the desired file format is like this
"""
n
123 456 789
"""
a b two d matrix
fixed size of 851 in SA, dynamically allocated in tabou
a[i][j] row major order read in
call tabu_search() or use a for loop and repeatedly call tire_solution_aleatoire() and recuit() to iterate

in tabou method:
solution: global vector holding solution to be iterated, randomly initialized
a, b: global variables  the flow and distance matrix (2d), long type (already scaled to int)
n problem size
other parameters as specified

in sa method:
p: global vector holding solution to be randomized and annealed
a, b: global variables  the flow and distance matrix (2d), long type (already scaled to int)
n problem size
Cout: global input argument, the cost
nb_iterations: number of iterations for each annealing

nb_res resolution


<<<
Nr: the number of receive antenna
Ns: the number of bit streams
>>>
M: the number of transmissions

<<<
K: number of temporal vectors in linear precoding (just 1)
>>>
removed (just 1)

<<<
L: number of blocks (just n_symbol)
>>>
n_symbol: number of symbols per frame

<<<
Mc: bit per symbol of modulation
>>>
Nbps: number of bits per symbol

<<<
block_num: number of blocks of received signal y, L
>>>
removed (just n_symbols)

>>>
Nr_K
<<<
M

>>>
Ns_K_Mc
bit_mat_row_num
<<<
Nbps
Q = 2 ^ Nbps

>>>
block_index
<<<
i_symbol

Please follow following steps

Debugging work flow for MSVS
0.Creat your dll or mexw32 file using the option make -g or mex -g
filename.c
1.Close every thing(to make it fast .. not mandatory though
2.Open MSVC 2008 Express Edition
3.Open Matlab
4.From MS VC 2008 Go To Tools->Attach To Process (If this option does
n't show up repeat step 1 and it will :)
5.In Attach to process, select MATLAB.exe (Native code option is
selected by default. If it is not select it manually)
6.From VC IDE, go to File->Open->File and select the file having
mexFunction(testmex.c in my case)
7.Put Breakpoints ar required lines(it will show warning that the code
may not hit the breakpint as the symbols for this are not loaded)
Ignore the warning.
8.Run your simulation (It will be good to put a breakpoint in Matlab
code line in which we call the mex func.
9.Run the code and it will hit the breakpoint...now we can step
execute it.



